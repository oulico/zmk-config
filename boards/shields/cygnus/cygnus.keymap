// 양쪽 엄지 콤보들
        combo_caps {
            timeout-ms = <50>;
            key-positions = <32 33>; // ES/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// QMK 스타일 레이어 정의
#define U_BASE 0
#define U_SYM 1
#define U_NAV 2
#define U_NUM 3
#define U_FUN 4
#define U_MOUSE 5
#define U_MEDIA 6

// QMK 스타일 매크로들
#define U_NA &none
#define U_NP &none
#define U_NU &none

// QMK의 복합 키들을 ZMK로 변환
#define LCTL_T(kc) &mt LCTRL kc
#define LALT_T(kc) &mt LALT kc
#define LGUI_T(kc) &mt LGUI kc
#define LSFT_T(kc) &mt LSHFT kc
#define ALGR_T(kc) &mt RALT kc
// LT 매크로 제거 - ZMK에서 충돌 발생

// 커스텀 행동들
/ {
    behaviors {
        // QMK의 DOUBLE_ESC 기능 구현
        double_esc: double_esc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp ESC>, <&cmd_space>;
        };

        // Cmd+Space 매크로
        cmd_space: cmd_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
        };

        // QMK의 스크린샷 기능들
        screenshot_area: screenshot_area {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(N3))>;
        };

        screenshot_window: screenshot_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(N4))>;
        };

        screenshot_screen: screenshot_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(N5))>;
        };

        // QMK의 편집 기능들
        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(Z)>;
        };

        redo: redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(Z))>;
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(X)>;
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
        };

        // QMK의 백스페이스 워드
        bspc_word: bspc_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(BSPC)>;
        };

        // Desktop switching
        desktop_switch: desktop_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(D))>;
        };

        // Home row mods with QMK timing
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    // 콤보 정의 (QMK의 THUMBCOMBOS 기능)
    combos {
        compatible = "zmk,combos";

        // 양쪽 엄지 콤보들
        combo_caps {
            timeout-ms = <50>;
            key-positions = <32 33>; // ESC + SPC
            bindings = <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // BASE 레이어 (QMK MIRYOKU_LAYER_BASE)
        base_layer {
            bindings = <
                &kp Q              &kp W              &kp E              &kp R              &kp T              &kp Y              &kp U              &kp I              &kp O              &kp P
                &hm LCTRL A        &hm LALT S         &hm LGUI D         &hm LSHFT F        &kp G              &kp H              &hm LSHFT J        &hm LGUI K         &hm LALT L         &hm LCTRL SQT
                &kp Z              &hm RALT X         &kp C              &kp V              &kp B              &kp N              &kp M              &kp COMMA          &hm RALT DOT       &kp FSLH
                                                      &double_esc        &lt U_NAV SPACE    &lt U_MOUSE TAB    &lt U_SYM RET      &lt U_NUM BSPC     &lt U_FUN DEL
            >;
        };

        // SYM 레이어 (QMK MIRYOKU_LAYER_SYM)
        sym_layer {
            bindings = <
                &kp LBRC           &kp AMPS           &kp ASTRK          &kp LPAR           &kp RBRC           U_NA               U_NA               U_NA               U_NA               U_NA
                &kp COLON          &kp DLLR           &kp PRCNT          &kp CARET          &kp PLUS           U_NA               &kp LSHFT          &kp LGUI           &kp LALT           &kp LCTRL
                &kp TILDE          &kp EXCL           &kp AT             &kp HASH           &kp PIPE           U_NA               U_NA               U_NA               &kp RALT           U_NA
                                                      &kp LPAR           &kp RPAR           &kp UNDER          U_NA               U_NA               U_NA
            >;
        };

        // NAV 레이어 (QMK MIRYOKU_LAYER_NAV)
        nav_layer {
            bindings = <
                U_NA               U_NA               U_NA               U_NA               U_NA               &redo              &paste             &copy              &cut               &undo
                &kp LCTRL          &kp LALT           &kp LGUI           &kp LSHFT          U_NA               &kp LEFT           &kp DOWN           &kp UP             &kp RIGHT          &kp GRAVE
                U_NA               &kp RALT           U_NA               U_NA               U_NA               &kp HOME           &kp PG_DN          &kp PG_UP          &kp END            &kp INS
                                                      U_NA               U_NA               U_NA               &kp RET            &bspc_word         &kp DEL
            >;
        };

        // NUM 레이어 (QMK MIRYOKU_LAYER_NUM)
        num_layer {
            bindings = <
                &kp LBKT           &kp N7             &kp N8             &kp N9             &kp RBKT           U_NA               U_NA               U_NA               U_NA               U_NA
                &kp SEMI           &kp N4             &kp N5             &kp N6             &kp EQUAL          U_NA               &kp LSHFT          &kp LCTRL          &kp LALT           &kp LGUI
                &kp GRAVE          &kp N1             &kp N2             &kp N3             &kp BSLH           U_NA               U_NA               U_NA               &kp RALT           U_NA
                                                      &kp DOT            &kp N0             &kp MINUS          U_NA               U_NA               U_NA
            >;
        };

        // FUN 레이어 (QMK MIRYOKU_LAYER_FUN)
        fun_layer {
            bindings = <
                &kp F12            &kp F7             &kp F8             &kp F9             &screenshot_area   U_NA               U_NA               U_NA               U_NA               U_NA
                &kp F11            &kp F4             &kp F5             &kp F6             &screenshot_window U_NA               &kp LSHFT          &kp LCTRL          &kp LALT           &kp LGUI
                &kp F10            &kp F1             &kp F2             &kp F3             &screenshot_screen U_NA               U_NA               U_NA               U_NA               U_NA
                                                      &kp F18            &kp SPACE          &kp TAB            U_NA               U_NA               U_NA
            >;
        };

        // MOUSE 레이어 (QMK MIRYOKU_LAYER_MOUSE)
        mouse_layer {
            bindings = <
                U_NA               U_NA               U_NA               U_NA               U_NA               &redo              &paste             &copy              &cut               &undo
                &kp LCTRL          &kp LALT           &kp LGUI           &kp LSHFT          U_NA               U_NA               U_NA               U_NA               U_NA               U_NA
                U_NA               &kp RALT           U_NA               U_NA               U_NA               U_NA               U_NA               U_NA               U_NA               U_NA
                                                      U_NA               U_NA               U_NA               U_NA               U_NA               &desktop_switch
            >;
        };

        // MEDIA 레이어 (추가)
        media_layer {
            bindings = <
                &bt BT_CLR         &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3       U_NA               U_NA               U_NA               U_NA               U_NA
                &out OUT_TOG       &kp C_PREV         &kp C_PP           &kp C_NEXT         &kp C_VOL_UP       U_NA               &kp LSHFT          &kp LGUI           &kp LALT           &kp LCTRL
                U_NA               U_NA               U_NA               U_NA               &kp C_VOL_DN       U_NA               U_NA               U_NA               &kp RALT           U_NA
                                                      U_NA               U_NA               U_NA               U_NA               U_NA               U_NA
            >;
        };
    };
};
